---
title: "Homework 2"
author: Keshav Ramesh
format: pdf
editor: visual
---


```{r, global_options, include=FALSE}


knitr::opts_chunk$set(tidy.opts=list(width.cutoff=60), tidy=TRUE)

```




## Task 1: Basic Vector Practice

### Question 1



```{r}
pre = c(130, 128, 116, 124, 133, 134, 118, 126, 114, 127, 141, 138, 128,
        140, 137, 131, 120, 128, 139, 135)
post = c(114, 98, 113, 99, 107, 116, 113, 111, 119, 117, 101, 119, 130,
         122, 106, 106, 124, 102, 117, 113)


```

### Question 2

```{r}

names = paste("Subject", 1:20, sep = "_")

names(pre) = names
names(post) = names
```

### Question 3

```{r}

diff_op = pre - post

diff_op


```

### Question 4 

```{r}
mean(diff_op)

```
### Question 5

```{r}
decreased = which(diff_op > 0)

decreased

```

### Question 6

```{r}
positive_diff = diff_op[diff_op > 0]

positive_diff
```

### Question 7


```{r}
mean(positive_diff)
```


### Task 2: Basic Data Frame Practice

### Question 1

```{r}

bp_df = data.frame(
  patient = names,
  pre = pre,
  post = post,
  diff = diff_op
)


```

### Question 2 

```{r}
bp_df[bp_df$diff < 0, ]

```

### Question 3

```{r}
bp_df$normal = bp_df$post < 120


## testing
bp_df

```

### Question 4


```{r}
knitr::kable(bp_df)

```


## Task 3: List practice


### Question 1

```{r}

placebo_pre = c(138, 135, 147, 117, 152, 134, 114, 121, 131, 130)

placebo_post = c(105, 136, 123, 130, 134, 143, 135, 139, 120, 124)

placebo_names = paste("Subject", 1:10, sep = "_")

diff_placebo = placebo_pre - placebo_post

bp_df_placebo = data.frame(
  patient = placebo_names,
  pre = placebo_pre,
  post = placebo_post,
  diff = diff_placebo,
  normal = placebo_post < 120
)



```


### Question 2 

```{r}
bp_list = list(treat = bp_df, placebo = bp_df_placebo)



```


### Question 3

```{r}
bp_list[[1]]

bp_list$treat

bp_list[["treat"]]

```



### Question 4 


```{r}
bp_list$placebo$pre

```

## Task 4: Control Flow Practice

### Question 1

```{r}

bp_list$treat$status = character(20)

```

### Question 2

```{r}


for (i in 1:20) {
  if (bp_list$treat$post[i] <= 120) {
    bp_list$treat$status[i] = "optimal"
  } else if (bp_list$treat$post[i] <= 130) {
    bp_list$treatment$status[i] = "borderline"
  } else {
    bp_list$treatment$status[i] = "high"
  }
}

## testing
bp_list

```


### Question 3

```{r}


bp_list$placebo$status = character(10)


for (i in 1:10) {
  if (bp_list$placebo$post[i] <= 120) {
    bp_list$placebo$status[i] = "optimal"
  } else if (bp_list$placebo$post[i] <= 130) {
    bp_list$placebo$status[i] = "borderline"
  } else {
    bp_list$placebo$status[i] = "high"
  }
}

## testing
bp_list


```




## Task 5 

### Question 1 

```{r}

summary_statsitics_function = function(df_list, stat = "mean") {
  
  my_fun = get(stat)
  summary = c(
    my_fun(df_list$treat$pre),
    my_fun(df_list$treat$post),
    my_fun(df_list$treat$diff),
    my_fun(df_list$placebo$pre),
    my_fun(df_list$placebo$post),
    my_fun(df_list$placebo$diff)
  )
  names(summary) = paste0(stat, "_", c(
    "treat_pre_BP", 
    "treat_post_BP", 
    "treat_diff_BP", 
    "placebo_pre_BP", 
    "placebo_post_BP", 
    "placebo_diff_BP"))
  
  
  return(summary)
}


# Testing Function

summary_statsitics_function(bp_list)

summary_statsitics_function(bp_list, stat = "var")

summary_statsitics_function(bp_list, stat = "sd")

summary_statsitics_function(bp_list, stat = "min")

summary_statsitics_function(bp_list, stat = "max")



```


























